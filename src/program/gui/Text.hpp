/**
 * @file src/program/gui/Text.hpp
 * @author Adam 'Adanos' GÄ…sior
 * Used library: SFML 2.3.2
 */

#ifndef GUI_TEXT_HPP
#define GUI_TEXT_HPP

#include "Component.hpp"

namespace rr
{

    class Text : public Component
    {
    private: sf::Text text_;

             ////////////////////////////////////////////////////////////////////////
             /// \brief Draws the text on the screen.
             ////////////////////////////////////////////////////////////////////////
             virtual void draw(sf::RenderTarget&, sf::RenderStates) const override;

    public:  ////////////////////////////////////////////////////////////////////////
             /// \brief Regular constructor.
             ////////////////////////////////////////////////////////////////////////
             Text(sf::String, sf::Font&, unsigned chsize = 30, sf::Color = sf::Color::White, sf::Text::Style = sf::Text::Bold);
             
             ////////////////////////////////////////////////////////////////////////
             /// \brief Regular constructor.
             ////////////////////////////////////////////////////////////////////////
             Text(sf::Vector2f position, sf::String, sf::Font&, unsigned chsize = 30, sf::Color = sf::Color::White, sf::Text::Style = sf::Text::Bold);

             ////////////////////////////////////////////////////////////////////////
             /// \brief Sets the text's body's position.
             ////////////////////////////////////////////////////////////////////////
             void setPosition(sf::Vector2f) override;

             ////////////////////////////////////////////////////////////////////////
             /// \brief Returns the text's body's position.
             ////////////////////////////////////////////////////////////////////////
             sf::Vector2f getPosition() const override { return text_.getPosition(); }

             ////////////////////////////////////////////////////////////////////////
             /// \brief Sets the text's body's size. (?)
             ////////////////////////////////////////////////////////////////////////
             void setSize(sf::Vector2f) override {}

             ////////////////////////////////////////////////////////////////////////
             /// \brief Returns the text's body's size.
             ////////////////////////////////////////////////////////////////////////
             sf::Vector2f getSize() const override { return sf::Vector2f(text_.getGlobalBounds().width, text_.getGlobalBounds().height); }

             ////////////////////////////////////////////////////////////////////////
             /// \brief Sets the text's character size.
             ////////////////////////////////////////////////////////////////////////
             void setCharacterSize(unsigned c) { text_.setCharacterSize(c); }

             ////////////////////////////////////////////////////////////////////////
             /// \brief Returns the text's character size.
             ////////////////////////////////////////////////////////////////////////
             int getCharacterSize() const { return text_.getCharacterSize(); }

             ////////////////////////////////////////////////////////////////////////
             /// \brief Sets the text's fill color.
             ////////////////////////////////////////////////////////////////////////
             void setFillColor(sf::Color c) { text_.setFillColor(c); }

             ////////////////////////////////////////////////////////////////////////
             /// \brief Returns the text's fill color.
             ////////////////////////////////////////////////////////////////////////
             sf::Color getFillColor() const { return text_.getFillColor(); }
             
             ////////////////////////////////////////////////////////////////////////
             /// \brief Sets the text's outline color.
             ////////////////////////////////////////////////////////////////////////
             void setOutlineColor(sf::Color c) { text_.setOutlineColor(c); }

             ////////////////////////////////////////////////////////////////////////
             /// \brief Returns the text's outline color.
             ////////////////////////////////////////////////////////////////////////
             sf::Color getOutlineColor() const { return text_.getOutlineColor(); }

             ////////////////////////////////////////////////////////////////////////
             /// \brief Sets the text's outline color.
             ////////////////////////////////////////////////////////////////////////
             void setOutlineThickness(float t) { text_.setOutlineThickness(t); }

             ////////////////////////////////////////////////////////////////////////
             /// \brief Returns the text's outline color.
             ////////////////////////////////////////////////////////////////////////
             float getOutlineThickness() const { return text_.getOutlineThickness(); }

             ////////////////////////////////////////////////////////////////////////
             /// \brief Sets the text's string.
             ////////////////////////////////////////////////////////////////////////
             void setString(sf::String s) { text_.setString(s); }

             ////////////////////////////////////////////////////////////////////////
             /// \brief Returns the text's string.
             ////////////////////////////////////////////////////////////////////////
             sf::String getString() const { return text_.getString(); }

             ////////////////////////////////////////////////////////////////////////
             /// \brief Sets the text's font.
             ////////////////////////////////////////////////////////////////////////
             void setFont(sf::Font f) { text_.setFont(f); }

             ////////////////////////////////////////////////////////////////////////
             /// \brief Returns the text's font.
             ////////////////////////////////////////////////////////////////////////
       const sf::Font* getFont() const { return text_.getFont(); }

             ////////////////////////////////////////////////////////////////////////
             /// \brief Sets the text's style.
             ////////////////////////////////////////////////////////////////////////
             void setStyle(sf::Text::Style s) { text_.setStyle(s); }

             ////////////////////////////////////////////////////////////////////////
             /// \brief Returns the text style.
             ////////////////////////////////////////////////////////////////////////
             sf::Text::Style getStyle() const { return (sf::Text::Style)text_.getStyle(); }

             ////////////////////////////////////////////////////////////////////////
             /// \brief Wraps the text.
             ////////////////////////////////////////////////////////////////////////
             void wrap(float width);
    };

}

#endif // GUI_TEXT_HPP
