/**
 * @file src/program/gui/Menu.hpp
 * @author Adam 'Adanos' GÄ…sior
 * Used library: SFML
 */

#ifndef GUI_MENU_HPP
#define GUI_MENU_HPP

#include <vector>

#include "Component.hpp"
#include "Button.hpp"

namespace rr
{

    class Menu : public Component
    {
    private: std::vector<Button> m_options;
             sf::Vector2f        m_position;

             ////////////////////////////////////////////////////////////////////////
             /// \brief Draws the menu on the screen.
             ////////////////////////////////////////////////////////////////////////
     virtual void draw(sf::RenderTarget&, sf::RenderStates) const override;

    public:  ////////////////////////////////////////////////////////////////////////
             /// \brief Regular constructor.
             ////////////////////////////////////////////////////////////////////////
             Menu(sf::Vector2f position = sf::Vector2f(0, 0));

             ////////////////////////////////////////////////////////////////////////
             /// \brief Destructor.
             ////////////////////////////////////////////////////////////////////////
            ~Menu();

             ////////////////////////////////////////////////////////////////////////
             /// \brief Adds a new option to the list.
             ////////////////////////////////////////////////////////////////////////
             void addOption(sf::String);

             ////////////////////////////////////////////////////////////////////////
             /// \brief Sets a chosen option's string.
             ////////////////////////////////////////////////////////////////////////
             void setOption(unsigned index, sf::String);

             ////////////////////////////////////////////////////////////////////////
             /// \brief Removes an option from the list.
             ////////////////////////////////////////////////////////////////////////
             void removeOption(unsigned index);

             ////////////////////////////////////////////////////////////////////////
             /// \brief Clears the list of options.
             ////////////////////////////////////////////////////////////////////////
             void clear() { m_options.clear(); }

             ////////////////////////////////////////////////////////////////////////
             /// \brief Returns the string of a chosen option.
             ////////////////////////////////////////////////////////////////////////
             sf::String getChosenOption(sf::RenderWindow&, sf::Event&);

             ////////////////////////////////////////////////////////////////////////
             /// \brief Returns the number of options stored in the list.
             ////////////////////////////////////////////////////////////////////////
             int getOptionCount() const { return m_options.size(); }
             
             ////////////////////////////////////////////////////////////////////////
             /// \brief Sets the menu's body's position.
             ////////////////////////////////////////////////////////////////////////
     virtual void setPosition(sf::Vector2f) override;

             ////////////////////////////////////////////////////////////////////////
             /// \brief Returns the menu's body's position.
             ////////////////////////////////////////////////////////////////////////
     virtual sf::Vector2f getPosition() const { return m_position; }

             ////////////////////////////////////////////////////////////////////////
             /// \brief Sets the menu's body's size.
             ////////////////////////////////////////////////////////////////////////
     virtual void setSize(sf::Vector2f) override {}

             ////////////////////////////////////////////////////////////////////////
             /// \brief Returns the menu's body's size.
             ////////////////////////////////////////////////////////////////////////
     virtual sf::Vector2f getSize() const { return sf::Vector2f(0, m_options.size()*40); }
    };

}

#endif // GUI_MENU_HPP
